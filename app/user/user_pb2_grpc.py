# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import app.user.user_pb2 as user__pb2


class UserStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Signup = channel.unary_unary(
                '/user.User/Signup',
                request_serializer=user__pb2.SignupRequest.SerializeToString,
                response_deserializer=user__pb2.SignupResponse.FromString,
                )
        self.Signin = channel.unary_unary(
                '/user.User/Signin',
                request_serializer=user__pb2.SigninRequest.SerializeToString,
                response_deserializer=user__pb2.SigninResponse.FromString,
                )
        self.ChangePassword = channel.unary_unary(
                '/user.User/ChangePassword',
                request_serializer=user__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=user__pb2.ChangePasswordResponse.FromString,
                )
        self.UpdateUserProfile = channel.unary_unary(
                '/user.User/UpdateUserProfile',
                request_serializer=user__pb2.UpdateUserProfileRequest.SerializeToString,
                response_deserializer=user__pb2.UpdateUserProfileResponse.FromString,
                )
        self.AddRole = channel.unary_unary(
                '/user.User/AddRole',
                request_serializer=user__pb2.AddRoleRequest.SerializeToString,
                response_deserializer=user__pb2.AddRoleResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/user.User/DeleteUser',
                request_serializer=user__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=user__pb2.DeleteUserResponse.FromString,
                )
        self.UploadFile = channel.unary_unary(
                '/user.User/UploadFile',
                request_serializer=user__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=user__pb2.UploadFileResponse.FromString,
                )
        self.UserBoxerProfile = channel.unary_unary(
                '/user.User/UserBoxerProfile',
                request_serializer=user__pb2.UserBoxerProfileRequest.SerializeToString,
                response_deserializer=user__pb2.UserBoxerProfileResponse.FromString,
                )


class UserServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Signup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Signin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUserProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserBoxerProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Signup': grpc.unary_unary_rpc_method_handler(
                    servicer.Signup,
                    request_deserializer=user__pb2.SignupRequest.FromString,
                    response_serializer=user__pb2.SignupResponse.SerializeToString,
            ),
            'Signin': grpc.unary_unary_rpc_method_handler(
                    servicer.Signin,
                    request_deserializer=user__pb2.SigninRequest.FromString,
                    response_serializer=user__pb2.SigninResponse.SerializeToString,
            ),
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=user__pb2.ChangePasswordRequest.FromString,
                    response_serializer=user__pb2.ChangePasswordResponse.SerializeToString,
            ),
            'UpdateUserProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUserProfile,
                    request_deserializer=user__pb2.UpdateUserProfileRequest.FromString,
                    response_serializer=user__pb2.UpdateUserProfileResponse.SerializeToString,
            ),
            'AddRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRole,
                    request_deserializer=user__pb2.AddRoleRequest.FromString,
                    response_serializer=user__pb2.AddRoleResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=user__pb2.DeleteUserRequest.FromString,
                    response_serializer=user__pb2.DeleteUserResponse.SerializeToString,
            ),
            'UploadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=user__pb2.UploadFileRequest.FromString,
                    response_serializer=user__pb2.UploadFileResponse.SerializeToString,
            ),
            'UserBoxerProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.UserBoxerProfile,
                    request_deserializer=user__pb2.UserBoxerProfileRequest.FromString,
                    response_serializer=user__pb2.UserBoxerProfileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user.User', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class User(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Signup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/Signup',
            user__pb2.SignupRequest.SerializeToString,
            user__pb2.SignupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Signin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/Signin',
            user__pb2.SigninRequest.SerializeToString,
            user__pb2.SigninResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/ChangePassword',
            user__pb2.ChangePasswordRequest.SerializeToString,
            user__pb2.ChangePasswordResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateUserProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/UpdateUserProfile',
            user__pb2.UpdateUserProfileRequest.SerializeToString,
            user__pb2.UpdateUserProfileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/AddRole',
            user__pb2.AddRoleRequest.SerializeToString,
            user__pb2.AddRoleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/DeleteUser',
            user__pb2.DeleteUserRequest.SerializeToString,
            user__pb2.DeleteUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/UploadFile',
            user__pb2.UploadFileRequest.SerializeToString,
            user__pb2.UploadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UserBoxerProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/user.User/UserBoxerProfile',
            user__pb2.UserBoxerProfileRequest.SerializeToString,
            user__pb2.UserBoxerProfileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
